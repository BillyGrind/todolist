{"version":3,"sources":["Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","state","element","items","onChange","e","setState","target","name","value","onSubmit","preventDefault","renderTodo","map","item","index","className","style","cursor","float","color","onClick","deleteItem","arr","splice","Fragment","this","htmlFor","type","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAEqBA,E,4MACjBC,MAAQ,CACJC,QAAS,GACTC,MAAO,I,EAEXC,SAAW,SAACC,GACR,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAIlCC,SAAW,SAACL,GACRA,EAAEM,iBACF,EAAKL,SAAS,CACVJ,QAAS,GACTC,MAAM,GAAD,mBAAM,EAAKF,MAAME,OAAjB,CAAwB,CAAED,QAAS,EAAKD,MAAMC,c,EAI3DU,WAAa,WACT,OAAO,EAAKX,MAAME,MAAMU,KAAI,SAACC,EAAMC,GAC/B,OACI,qBAAKC,UAAU,YAAf,SACI,qBAAKA,UAAU,YAAf,SACI,+BAAKF,EAAKZ,QACN,mBAAGc,UAAU,eACTC,MAAO,CAAEC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OACnDC,QAAS,kBAAM,EAAKC,WAAWP,YALfA,O,EAa5CO,WAAa,SAACP,GAEV,IAAMQ,EAAM,EAAKtB,MAAME,MACvBoB,EAAIC,OAAQT,EAAO,GACnB,EAAKT,SAAU,CACXH,MAAMoB,K,4CAId,WACI,OACI,eAAC,IAAME,SAAP,WACI,sBAAKT,UAAU,YAAf,UACI,qBAAKA,UAAU,gDAAf,wBACA,qBAAKA,UAAU,YAAf,SACI,uBAAMN,SAAUgB,KAAKhB,SAArB,UACI,sBAAKM,UAAU,aAAf,UACI,uBAAOW,QAAQ,UAAf,4BACA,uBAAOC,KAAK,OACRZ,UAAU,+BACVR,KAAK,UACLJ,SAAUsB,KAAKtB,SACfK,MAAOiB,KAAKzB,MAAMC,aAG1B,wBAAQc,UAAU,4BAAlB,+CAIXU,KAAKd,oB,GAhEYiB,aCSnBC,MARf,WACE,OACE,qBAAKd,UAAU,YAAf,SACE,cAAC,EAAD,OCMSe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dafa958c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Todo extends Component {\r\n    state = {\r\n        element: '',\r\n        items: []\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n        //console.log(this.state.element)\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            element: '',\r\n            items: [...this.state.items, { element: this.state.element }]\r\n        })\r\n    }\r\n\r\n    renderTodo = () => {\r\n        return this.state.items.map((item, index) => {\r\n            return (\r\n                <div className=\"card mb-3\" key={index}>\r\n                    <div className=\"card-body\">\r\n                        <h4>{item.element}\r\n                            <i className=\"fas fa-times\"\r\n                                style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                                onClick={() => this.deleteItem(index)}\r\n                                ></i></h4>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    deleteItem = (index) => {\r\n        //console.log(index);\r\n        const arr = this.state.items;\r\n        arr.splice (index, 1);\r\n        this.setState ({\r\n            items:arr\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"card my-3\">\r\n                    <div className=\"navbar navbar-expand-lg navbar-light bg-light\">To Do List</div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"element\"> Chose a faire</label>\r\n                                <input type=\"text\"\r\n                                    className=\"form-control form-control-lg\"\r\n                                    name=\"element\"\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.element}\r\n                                />\r\n                            </div>\r\n                            <button className=\"btn btn-primary btn-block\">AJouter une chose a faire</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                {this.renderTodo()}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css' \nimport ToDo from './Todo.js'\nfunction App() {\n  return (\n    <div className=\"container\">\n      <ToDo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}